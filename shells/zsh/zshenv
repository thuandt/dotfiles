#!/usr/bin/env zsh
# ~/.zshenv

# Skip the not really helping Ubuntu global compinit
skip_global_compinit=1

# https://github.com/robbyrussell/oh-my-zsh/issues/1433
DEBIAN_PREVENT_KEYBOARD_CHANGES=yes

# https://bugzilla.gnome.org/show_bug.cgi?id=772919
# https://eklitzke.org/down-the-ssh-auth-sock-rabbit-hole-a-gnome-adventure
export GSM_SKIP_SSH_AGENT_WORKAROUND=1

# PowerShell snap fix
# https://github.com/PowerShell/PowerShell-Snap/issues/33
export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

# User binaries
export BIN_DIR=$HOME/.local/bin
export PATH=$BIN_DIR:$PATH

# Editor
export EDITOR="code --wait"
export VISUAL="${EDITOR}"
export CVSEDITOR="${EDITOR}"
export USE_EDITOR="${EDITOR}"
export SVN_EDITOR="${EDITOR}"
export GIT_EDITOR="${EDITOR}"
export KUBE_EDITOR="${EDITOR}"
export XDG_CONFIG_HOME="${HOME}/.config"

export BAT_THEME="TwoDark"

# vi mode key timeout
export KEYTIMEOUT=1

# Color man pages
export PAGER='less'
unset LESSCHARSET # Fix manpages looking funky
export LESS='-i -n -w -z4 -g -M -S -R -X -F'

# Less colors for Man Pages: Solarized Dark
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
# export LESS_TERMCAP_md=$'\E[01;31m'       # begin bold
# export LESS_TERMCAP_me=$'\E[0m'           # end mode
# export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
# export LESS_TERMCAP_so=$'\E[0;37;102m'    # begin standout-mode - info box
# export LESS_TERMCAP_ue=$'\E[0m'           # end underline
# export LESS_TERMCAP_us=$'\E[04;32m'       # begin underline

# asdf
export ASDF_RUBY_BUILD_VERSION=master

# gcloud
export CLOUDSDK_PYTHON=python3
export CLOUDSDK_HOME="${HOME}/Applications/google-cloud-sdk"

# enhancd
export ENHANCD_FILTER=fzf
export ENHANCD_DISABLE_DOT=1
export ENHANCD_DISABLE_HYPHEN=1
export ENHANCD_DISABLE_HOME=1

# poetry
export POETRY_VENV_IN_PROJECT=1
export POETRY_VIRTUALENVS_CREATE=1
export POETRY_VIRTUALENVS_IN_PROJECT=1
export POETRY_INSTALL_DEPENDENCIES=1

if [[ "$OSTYPE" == linux* ]]; then
  ### Setup PATH ###
  export POETRY=$HOME/.poetry/bin                               # poetry
  export PULUMI=$HOME/.pulumi/bin                               # pulumi
  export KREW_ROOT=$HOME/.krew                                  # krew
  export CARGO=$HOME/.cargo/bin                                 # Rust cargo
  export CABAL=$HOME/.cabal/bin                                 # Haskell cabal
  export YARNBIN=$HOME/.yarn/bin                                # yarn
  export YARNGLOBAL=$HOME/.config/yarn/global/node_modules/.bin # yarn global

  # My custom path
  MYPATH=("${POETRY}" "${PULUMI}" "${KREW_ROOT}/bin" "${CARGO}" "${CABAL}" "${YARNBIN}" "${YARNGLOBAL}")

  # Add directory to $PATH if its not already there
  for p in "${MYPATH[@]}"; do
    case ":$PATH:" in
      *":$p:"*) : ;;
      *) PATH="$p:$PATH" ;;
    esac
  done

  ### virtualenv ###
  export WORKON_HOME=$HOME/.local/share/virtualenvs
  # nmap
  export NMAP_PRIVILEGED=""

  # minicom
  export MINICOM="-m -c on"

  # mtr options
  export MTR_OPTIONS="--no-dns"

  # Setup Input Method
  export MY_INPUT_METHOD="ibus"
  export XMODIFIERS=${XMODIFIERS:-@im=${MY_INPUT_METHOD}}
  export GTK_IM_MODULE=${GTK_IM_MODULE:-${MY_INPUT_METHOD}}
  export QT_IM_MODULE=${QT_IM_MODULE:-${MY_INPUT_METHOD}}
  export QT4_IM_MODULE=${QT4_IM_MODULE:-${MY_INPUT_METHOD}}
  export CLUTTER_IM_MODULE=${CLUTTER_IM_MODULE:-${MY_INPUT_METHOD}}

  # Setting locales
  export LANGUAGE="en_US.UTF-8"
  export LANG="${LANGUAGE}"
  export LC_ALL="${LANGUAGE}"
  export LC_CTYPE="${LANGUAGE}"

  export BROWSER="firefox"

  # systemd import environment
  # https://wiki.archlinux.org/index.php/systemd/User#Environment_variables
  systemctl --user import-environment PATH EDITOR KUBE_EDITOR
fi

### API keys ###
# Query GNOME Keyring for secrets

# [TinyPNG](tinypng.org) Smart PNG and JPEG compression
# Optimize your images with a perfect balance in quality and file size.
TINYPNG_API_KEY="$(secret-tool lookup api-key tinypng)"
export TINYPNG_API_KEY

# Twilio SID vs Token for call/SMS
TWILIO_ACCOUNT_SID="$(secret-tool lookup account-sid twilio)"
TWILIO_AUTH_TOKEN="$(secret-tool lookup auth-token twilio)"
export TWILIO_ACCOUNT_SID
export TWILIO_AUTH_TOKEN

# Gitlab.com API token
GITLAB_TOKEN="$(secret-tool lookup token gitlab.com)"
export GITLAB_TOKEN

# ipinfo.io api token
IPINFO_TOKEN="$(secret-tool lookup token ipinfo.io)"
export IPINFO_TOKEN

# macvendors.com api token
MACVENDORS_TOKEN="$(secret-tool lookup token macvendors)"
export MACVENDORS_TOKEN

# Mullvad VPN account number
MULLVAD_ACCOUNT_NUMBER=$(secret-tool lookup account mullvad)
export MULLVAD_ACCOUNT_NUMBER

# End of ~/.zshenv
